# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
#hello i'm SANJAR YUSUF

from datetime import datetime

# Show the menu to the user
def print_menu():
    print("\n========= TODO LIST MENU =========")
    print("1. Show all tasks")
    print("2. Add a new task")
    print("3. Remove a task")
    print("4. Exit the program")

# Display all current tasks with date
def display_tasks(tasks):
    if not tasks:
        print("No tasks yet! Add something.")
        return

    print("\nYour Tasks:")
    for i, task in enumerate(tasks, start=1):
        print(f"{i}. {task['text']} (added on {task['created_at']})")

# Add a new task with the current timestamp
def add_task(tasks):
    text = input("Enter your new task: ").strip()
    if text == "":
        print("‚ö†Ô∏è  Task cannot be empty.")
        return
    new_task = {
        "text": text,
        "created_at": datetime.now().strftime("%Y-%m-%d %H:%M")
    }
    tasks.append(new_task)
    print("‚úÖ Task added successfully!")

# Remove a task by its number
def remove_task(tasks):
    if not tasks:
        print("No tasks to remove.")
        return

    display_tasks(tasks)
    try:
        num = int(input("Enter the number of the task to remove: "))
        if 1 <= num <= len(tasks):
            removed = tasks.pop(num - 1)
            print(f"‚ùå Removed: {removed['text']}")
        else:
            print("‚ö†Ô∏è  Invalid task number.")
    except ValueError:
        print("‚ö†Ô∏è  Please enter a valid number.")

# Main program loop
def main():
    tasks = []

    while True:
        print_menu()
        choice = input("Select an option (1‚Äì4): ").strip()

        if choice == '1':
            display_tasks(tasks)
        elif choice == '2':
            add_task(tasks)
        elif choice == '3':
            remove_task(tasks)
        elif choice == '4':
            print("Goodbye! üëã")
            break
        else:
            print("‚ö†Ô∏è  Please choose between 1 and 4.")

# Start the program
if __name__ == "__main__":
    main()
